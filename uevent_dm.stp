#!/usr/bin/env stap

function trace(entry_p, extra) {
	%( $# > 1 %? if (tid() in trace) %)
		printf("%s%s%s %s\n",
		thread_indent(entry_p),
		(entry_p > 0 ? "->":"<-"),
		probefunc(), extra)
}

%( $# > 1 %?
global trace
probe $2.call {
	trace[tid()] = 1
}
probe $2.return {
	delete trace[tid()]
}
%)

probe begin
{
	printf("Hello world\n")
}

/* probe kernel.function("kobject_uevent_env") */
/* probe kernel.function("*@net/socket.c") {} */
/* probe kernel.function("*@drivers/dm/md.c")  { trace(4, $$parms) } */
probe module("mpt3sas").function("_scsih_block_io_all_device")
{
	trace(1, $$parms)
}

probe module("mpt3sas").function("_scsih_internal_device_unblock").return
{
	trace(-1, $$return)
}

probe module("mpt3sas").function("_scsih_internal_device_unblock")
{
	trace(1, $$parms)
}

probe module("mpt3sas").function("_scsih_block_io_all_device").return
{
	trace(-1, $$return)
}

probe end
{
	printf("Bye world\n")
}
